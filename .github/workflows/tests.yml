name: Tests & Coverage

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18.x'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting (if available)
        run: |
          if [ -f .eslintrc.js ] || [ -f .eslintrc.json ]; then
            npm run lint || echo "Linting not configured"
          else
            echo "No linting configuration found"
          fi
        continue-on-error: true

      - name: Run tests with coverage
        run: npm run test:ci

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: backend
          name: backend-coverage-node-${{ matrix.node-version }}
          fail_ci_if_error: false

      - name: Archive coverage reports
        uses: actions/upload-artifact@v3
        with:
          name: coverage-node-${{ matrix.node-version }}
          path: coverage/
          retention-days: 30

      - name: Comment PR with test results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            let coverageInfo = '';
            
            try {
              const coverageSummary = fs.readFileSync('./coverage/coverage-summary.txt', 'utf8');
              coverageInfo = `\n\nðŸ“Š **Coverage Summary:**\n\`\`\`\n${coverageSummary}\n\`\`\``;
            } catch (e) {
              coverageInfo = '\n\nðŸ“Š Coverage report generated successfully';
            }
            
            const commentBody = `## âœ… Tests Completed Successfully
            
            **Node.js Version:** ${{ matrix.node-version }}
            **Status:** All tests passed
            **Coverage:** Generated and uploaded${coverageInfo}
            
            ---
            *Automated test results for Node.js ${{ matrix.node-version }}*`;
            
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: commentBody
            });
